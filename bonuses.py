def hidden_attack(damage=None, attacker=None, defender=None, type_bonus=None, logger=None, level=None, *args, **kwargs):
    '"–°–∫—Ä—ã—Ç–∞—è –∞—Ç–∞–∫–∞": +1 –∫ —É—Ä–æ–Ω—É –µ—Å–ª–∏ –ª–æ–≤–∫–æ—Å—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤—ã—à–µ –ª–æ–≤–∫–æ—Å—Ç–∏ —Ü–µ–ª–∏'
    if type_bonus == 'damage_bonus':
        if attacker.dexterity > defender.dexterity:
            logger.log('–ë–æ–Ω—É—Å –æ—Ç "–°–∫—Ä—ã—Ç–æ–π –∞—Ç–∞–∫–∏": ‚öîÔ∏è+1 –µ–¥.', level)
            damage += 1
    return damage


def dexterity_up(damage=None, attacker=None, type_bonus=None, logger=None, level=None, *args, **kwargs):
    '–í–∞—à–∞ –ª–æ–≤–∫–æ—Å—Ç—å —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 1 –µ–¥.'
    if type_bonus == 'one_time_bonus':
        attacker.dexterity += 1
    return damage


def poison(damage=None, turn_counter=None, type_bonus=None, logger=None, level=None, *args, **kwargs):
    '"–Ø–¥": –Ω–∞–Ω–æ—Å–∏—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ +1 —É—Ä–æ–Ω–∞ –Ω–∞ –≤—Ç–æ—Ä–æ–º —Ö–æ–¥—É, +2 –Ω–∞ —Ç—Ä–µ—Ç—å–µ–º –∏ —Ç.–¥.'
    if type_bonus == 'damage_bonus':
        if turn_counter > 1:
            logger.log(f'–ë–æ–Ω—É—Å –æ—Ç "–Ø–¥": ‚öîÔ∏è+{turn_counter - 1} –µ–¥. –Ω–∞ {turn_counter} —Ö–æ–¥—É', level)
            damage += turn_counter - 1
    return damage


def rush(damage=None, attacker=None, turn_counter=None, type_bonus=None, logger=None, level=None, *args, **kwargs):
    '"–ü–æ—Ä—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é": –≤ –ø–µ—Ä–≤—ã–π —Ö–æ–¥ –Ω–∞–Ω–æ—Å–∏—Ç –¥–≤–æ–π–Ω–æ–π —É—Ä–æ–Ω –æ—Ä—É–∂–∏–µ–º'
    if type_bonus == 'damage_bonus':
        if turn_counter == 1:
            logger.log(f'–ë–æ–Ω—É—Å –æ—Ç "–ü–æ—Ä—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é": x2 —É—Ä–æ–Ω–∞ –æ—Ç –æ—Ä—É–∂–∏–µ: ‚öîÔ∏è+{attacker.weapon_damage} –µ–¥.', level)
            damage += attacker.weapon_damage
    return damage


def shield(damage=None, attacker=None, defender=None, type_bonus=None, logger=None, level=None, *args, **kwargs):
    '"–©–∏—Ç": -3 –∫ –ø–æ–ª—É—á–∞–µ–º–æ–º—É —É—Ä–æ–Ω—É –µ—Å–ª–∏ —Å–∏–ª–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤—ã—à–µ —Å–∏–ª—ã –∞—Ç–∞–∫—É—é—â–µ–≥–æ'
    if type_bonus == 'protection_bonus':
        if attacker.power < defender.power:
            logger.log(f'–ë–æ–Ω—É—Å —É {defender.name} –æ—Ç "–©–∏—Ç": –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ ‚õä3 –µ–¥.', level)
            damage -= 3
    return damage


def power_up(damage=None, attacker=None, type_bonus=None, logger=None, level=None, *args, **kwargs):
    '–í–∞—à–∞ —Å–∏–ª–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 1 –µ–¥.'
    if type_bonus == 'one_time_bonus':
        attacker.power += 1
    return damage


def rage(damage=None, turn_counter=None, type_bonus=None, logger=None, level=None, *args, **kwargs):
    '"–Ø—Ä–æ—Å—Ç—å": +2 –∫ —É—Ä–æ–Ω—É –≤ –ø–µ—Ä–≤—ã–µ 3 —Ö–æ–¥–∞, –ø–æ—Ç–æ–º -1 –∫ —É—Ä–æ–Ω—É'
    if type_bonus == 'damage_bonus':
        delta = 2 if turn_counter <= 3 else -1
        logger.log(f'–ë–æ–Ω—É—Å –æ—Ç "–Ø—Ä–æ—Å—Ç—å": ‚öîÔ∏è+{delta} –µ–¥. —É—Ä–æ–Ω–∞ –Ω–∞ {turn_counter} —Ö–æ–¥—É', level)
        damage += delta
    return damage


def stone_skin(damage=None, defender=None, type_bonus=None, logger=None, level=None, *args, **kwargs):
    '"–ö–∞–º–µ–Ω–Ω–∞—è –∫–æ–∂–∞": –ü–æ–ª—É—á–∞–µ–º—ã–π —É—Ä–æ–Ω —Å–Ω–∏–∂–∞–µ—Ç—Å—è –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏'
    if type_bonus == 'protection_bonus':
        delta = defender.endurance
        logger.log(f'–ë–æ–Ω—É—Å —É {defender.name} –æ—Ç "–ö–∞–º–µ–Ω–Ω–∞—è –∫–æ–∂–∞": –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ ‚õä{delta} –µ–¥. —É—Ä–æ–Ω–∞', level)
        damage -= delta
    return damage


def endurance_up(damage=None, attacker=None, type_bonus=None, logger=None, level=None, *args, **kwargs):
    '–í–∞—à–∞ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 1 –µ–¥.'
    if type_bonus == 'one_time_bonus':
        attacker.endurance += 1
    return damage


def fear_crushing(damage=None, attacker=None, defender=None, type_bonus=None, logger=None, level=None, *args, **kwargs):
    '–ü–æ–ª—É—á–∞–µ—Ç –≤–¥–≤–æ–µ –±–æ–ª—å—à–µ —É—Ä–æ–Ω–∞, –µ—Å–ª–∏ –µ–≥–æ –±—å—é—Ç –¥—Ä–æ–±—è—â–∏–º –æ—Ä—É–∂–∏–µ–º'
    if type_bonus == 'protection_bonus':
        if attacker.type_weapon == '–î—Ä–æ–±—è—â–∏–π':
            logger.log(f'{defender.name} –±–æ–∏—Ç—Å—è –¥—Ä–æ–±—è—â–µ–≥–æ –æ—Ä—É–∂–∏—è, —É—Ä–æ–Ω —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –≤–¥–≤–æ–µ!!! ‚öîÔ∏èx2', level)
            damage *= 2
    return damage


def immune_chopping(damage=None, attacker=None, defender=None, type_bonus=None, logger=None, level=None,
                    *args, **kwargs):
    '–†—É–±—è—â–µ–µ –æ—Ä—É–∂–∏–µ –Ω–µ –Ω–∞–Ω–æ—Å–∏—Ç –µ–º—É —É—Ä–æ–Ω–∞(–Ω–æ —É—Ä–æ–Ω –æ—Ç —Å–∏–ª—ã –∏ –ø—Ä–æ—á–∏—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç)'
    if type_bonus == 'protection_bonus':
        if attacker.type_weapon == '–†—É–±—è—â–∏–π':
            logger.log(f'–ò–º–º—É–Ω–∏—Ç–µ—Ç –Ω–∞ —Ä—É–±—è—â–µ–µ –æ—Ä—É–∂–∏–µ —É {defender.name} –±–ª–æ–∫–∏—Ä—É–µ—Ç üõ°{attacker.weapon_damage} –µ–¥. —É—Ä–æ–Ω–∞',
                       level)
            damage -= attacker.weapon_damage
    return damage


def breath_fire(damage=None, turn_counter=None, type_bonus=None, logger=None, level=None, *args, **kwargs):
    '–ö–∞–∂–¥—ã–π 3-–π —Ö–æ–¥ –¥—ã—à–∏—Ç –æ–≥–Ω—ë–º, –Ω–∞–Ω–æ—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ 3 —É—Ä–æ–Ω–∞'
    if type_bonus == 'damage_bonus':
        if turn_counter % 3 == 0:
            logger.log(f'–í –≥—Ä—É–¥–∏ –∑–∞—Ä–æ–∂–¥–∞–µ—Ç—Å—è –ø–µ—Ä–≤–æ—Ä–æ–¥–Ω–æ –ø–ª–∞–º—è\n–†—ë–±—Ä–∞ —á—ë—Ä–Ω—ã–º —É–∑–æ—Ä–æ–º –ø—Ä–æ—Å—Ç—É–ø–∞—é—Ç –ø–æ–¥ –∫–æ–∂–µ–π...'
                       f'\n–ò–∑ –ø–∞—Å—Ç–∏ –≤—ã—Ä—ã–≤–∞–µ—Ç—Å—è –∂–∏–¥–∫–∏–π –æ–≥–æ–Ω—å,\n–Ω–∞–Ω–æ—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ ‚öîÔ∏è+3 –µ–¥. —É—Ä–æ–Ω–∞', level)
            damage += 3
    return damage
